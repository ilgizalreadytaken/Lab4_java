package n3;

public class BoxUtility {

    // Метод, который кладет трехмерную точку в коробку
    public static void putPointInBox(Box<?> box, double x, double y, double z) throws Exception {
        // Проверяем, что переданная коробка совместима с n3.Box<n3.Point>
        if (box instanceof Box<?>) {
            // Приводим коробку к типу n3.Box<n3.Point>, чтобы работать с точками
            Box<Point> pointBox = (Box<Point>) box;
            // Создаем объект точки с заданными координатами
            Point point = new Point(x, y, z);
            // Кладем созданную точку в коробку
            pointBox.put(point);
        }
    }
}

/*
Объяснение:
1. Метод использует универсальный тип n3.Box<?> (wildcard), позволяя принимать коробки с любым типом параметризации.
2. Проверка через instanceof удостоверяется, что коробка совместима с n3.Box<n3.Point>, так как мы хотим работать только с точками.
3. Приведение типа (casting) позволяет безопасно использовать методы коробки для объектов n3.Point.
4. Метод демонстрирует, как обобщенный подход может быть адаптирован для конкретного типа (в данном случае n3.Point).

чтобы иметь возможность работать с коробками произвольных типов данных,
но при этом задействовать определенную логику работы с конкретными типами данных, такими как Point.
 */